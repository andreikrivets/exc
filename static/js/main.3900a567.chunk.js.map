{"version":3,"sources":["components/currency-card/currency-card.jsx","components/header-card/header-card.jsx","components/currencies-list/index.jsx","components/data/getCurrencyValue.js","components/App.jsx","index.js"],"names":["useStyles","makeStyles","card","padding","marginBottom","cardContent","width","minWidth","height","display","flexDirection","alignItems","textAlign","justifyContent","divider","input","button","fontSize","CurrencyCard","name","value","rate","onSelect","classes","Card","className","CardContent","root","Button","color","variant","onClick","Divider","TextField","toFixed","HeaderCard","info","setCurrency","defaultValue","onChange","e","target","wrapper","flexWrap","CurrenciesList","data","initialCurrency","useState","setRate","conversion_rates","currencyNames","Object","keys","currencyValues","values","currentRate","key","uniqid","map","el","i","length","getCurrencyValue","a","async","base","url","fetch","resp","json","App","setData","open","setOpen","isLoading","setIsLoading","getData","curr","then","useEffect","circProgress","style","marginTop","CircularProgress","Snackbar","autoHideDuration","onClose","message","base_code","AppW","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3900a567.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./currency-card.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    padding: \"0 0\",\r\n    marginBottom: \"30px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"0 0\",\r\n    width: \"15vw\",\r\n    minWidth: \"150px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"space-around\",\r\n    \"&:last-child\": {\r\n      padding: \"0 0\",\r\n    },\r\n  },\r\n  divider: {\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    fontSize: \"1.5vw\",\r\n  },\r\n});\r\n\r\nconst CurrencyCard = ({ name, value, rate, onSelect }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent\r\n        classes={{\r\n          root: classes.cardContent,\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          onClick={() => onSelect(name)}\r\n        >\r\n          {name}\r\n        </Button>\r\n        <Divider className={classes.divider} variant=\"middle\" />\r\n        <TextField\r\n          className={classes.input}\r\n          value={(value * rate).toFixed(3)}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CurrencyCard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"../currency-card/currency-card.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    padding: \"0 0\",\r\n  },\r\n  cardContent: {\r\n    padding: \"0 0\",\r\n    width: \"15vw\",\r\n    minWidth: \"150px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    justifyContent: \"space-around\",\r\n    \"&:last-child\": {\r\n      padding: \"0 0\",\r\n    },\r\n  },\r\n  divider: {\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    fontSize: \"1.5vw\",\r\n  },\r\n});\r\n\r\nconst HeaderCard = ({ info, setCurrency }) => {\r\n  const classes = useStyles();\r\n  const handleChange = (e) => {\r\n    setCurrency(e.target.value);\r\n  };\r\n  if (!info) return null;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent\r\n        classes={{\r\n          root: classes.cardContent,\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n        >\r\n          {info}\r\n        </Button>\r\n        <Divider className={classes.divider} variant=\"middle\" />\r\n\r\n        <TextField\r\n          className={classes.input}\r\n          defaultValue={1}\r\n          onChange={handleChange}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default HeaderCard;\r\n","import React, { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CurrencyCard from \"../currency-card/currency-card\";\r\nimport HeaderCard from \"../header-card/header-card\";\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nconst CurrenciesList = ({ data, initialCurrency, onSelect }) => {\r\n  const classes = useStyles();\r\n  const [rate, setRate] = useState(1);\r\n  const getCurrentRate = (currentRate) => {\r\n    if (currentRate > 0) setRate(currentRate);\r\n    else setRate(0);\r\n  };\r\n  if (!data.conversion_rates) return null;\r\n  const currencyNames = Object.keys(data.conversion_rates);\r\n  const currencyValues = Object.values(data.conversion_rates);\r\n  return (\r\n    <>\r\n      <div className={classes.wrapper}>\r\n        <HeaderCard info={initialCurrency} setCurrency={getCurrentRate} />\r\n      </div>\r\n      <div className={classes.wrapper} key={uniqid()}>\r\n        {currencyNames.map((el, i) => {\r\n          return i < currencyNames.length ? (\r\n            <CurrencyCard\r\n              name={el}\r\n              value={currencyValues[i]}\r\n              key={uniqid()}\r\n              rate={rate}\r\n              onSelect={onSelect}\r\n            />\r\n          ) : null;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrenciesList;\r\n","const getCurrencyValue = async (base = \"USD\") => {\r\n  const key = \"7e3e55292c8604fbcebd2ea7\";\r\n  const url = `https://v6.exchangerate-api.com/v6/${key}/latest/${base}`;\r\n  const resp = await fetch(url);\r\n  const data = await resp.json();\r\n  return data;\r\n};\r\n\r\nexport default getCurrencyValue;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Snackbar, CircularProgress } from \"@material-ui/core\";\r\n\r\nimport CurrenciesList from \"./currencies-list\";\r\nimport getCurrencyValue from \"./data/getCurrencyValue\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const getData = (curr) => {\r\n    setIsLoading(true);\r\n    getCurrencyValue(curr).then((resp) => {\r\n      setData(resp);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(\"USD\");\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setOpen(true);\r\n    getData(e);\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const circProgress = (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: \"300px\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n\r\n  return isLoading ? (\r\n    circProgress\r\n  ) : (\r\n    <>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n        message={`switched to ${data.base_code}`}\r\n      />\r\n      <CurrenciesList\r\n        data={data}\r\n        onSelect={handleChange}\r\n        initialCurrency={data.base_code || \"USD\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AppW = () => <App />;\r\n\r\nexport default AppW;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AppW from './components/App'\r\n\r\nReactDOM.render(<AppW />, document.getElementById('root'));"],"sourceRoot":""}