{"version":3,"sources":["components/getCurrencyValue.js","components/currency-card.jsx","components/header-card.jsx","components/currencies-list.jsx","components/App.jsx","index.js"],"names":["getCurrencyValue","base","a","async","console","log","url","fetch","resp","json","data","useStyles","makeStyles","card","padding","marginBottom","cardContent","width","minWidth","height","display","flexDirection","alignItems","textAlign","justifyContent","divider","input","button","fontSize","CurrencyCard","info","rate","onSelect","classes","length","Card","className","CardContent","root","Button","color","variant","onClick","Divider","TextField","value","toFixed","HeaderCard","setCurrency","defaultValue","onChange","e","target","wrapper","flexWrap","CurrenciesList","useState","setRate","rates","i","key","push","toArray","currentRate","uniquid","map","el","App","setData","currency","isLoading","setIsLoading","getData","then","document","addEventListener","style","marginTop","CircularProgress","AppW","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7dd05d8f.chunk.js","sourcesContent":["const getCurrencyValue = async (base) => {\r\n    base = base || \"USD\";\r\n    console.log('запрос');\r\n    const url = `https://api.exchangeratesapi.io/latest?base=${base}`;\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n    return data\r\n}\r\n\r\nexport default getCurrencyValue;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Card, CardContent, Typography, Divider, TextField } from '@material-ui/core';\r\n\r\nimport './currency-card.css'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        padding: \"0 0\",\r\n        marginBottom: \"30px\",\r\n    },\r\n    cardContent: {\r\n        padding: \"0 0\",\r\n        width: \"15vw\",\r\n        minWidth: \"150px\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"space-around\",\r\n        \"&:last-child\": {\r\n            padding: \"0 0\"\r\n          }\r\n    },\r\n    divider: {\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        textAlign: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        width: \"100%\",\r\n        fontSize: \"1.5vw\",\r\n    },\r\n})\r\n\r\nconst CurrencyCard = ({ info, rate, onSelect }) => {\r\n    const classes = useStyles();\r\n    if (info.length === 0) return null;\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent \r\n                classes={{\r\n                    root: classes.cardContent\r\n                }}\r\n            >\r\n                <Button \r\n                    color=\"primary\"\r\n                    className={classes.button} \r\n                    variant=\"contained\" \r\n                    onClick={() => onSelect(info[0])}\r\n                >\r\n                    {info[0]}\r\n                </Button>\r\n                <Divider className={classes.divider} variant=\"middle\" />    \r\n                <TextField \r\n                    className={classes.input} \r\n                    value={(info[1] * rate).toFixed(3)}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CurrencyCard","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Card, CardContent, Typography, Divider, TextField } from '@material-ui/core';\r\n\r\nimport './currency-card.css'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        padding: \"0 0\",\r\n    },\r\n    cardContent: {\r\n        padding: \"0 0\",\r\n        width: \"15vw\",\r\n        minWidth: \"150px\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"space-around\",\r\n        \"&:last-child\": {\r\n            padding: \"0 0\"\r\n          }\r\n    },\r\n    divider: {\r\n        width: \"100%\"\r\n    },\r\n    input: {\r\n        textAlign: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        width: \"100%\",\r\n        fontSize: \"1.5vw\",\r\n    },\r\n})\r\n\r\nconst HeaderCard = ( { info, setCurrency } ) => {\r\n    const classes = useStyles();\r\n    const handleChange = (e) => {\r\n        setCurrency(e.target.value);\r\n    }\r\n    if (!info) return null;\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent \r\n                classes={{\r\n                    root: classes.cardContent\r\n                }}\r\n            >\r\n                <Button \r\n                    color=\"secondary\"\r\n                    className={classes.button} \r\n                    variant=\"contained\" \r\n                >\r\n                    {info}\r\n                </Button>\r\n                <Divider className={classes.divider} variant=\"middle\" />    \r\n\r\n                <TextField \r\n                    className={classes.input} \r\n                    defaultValue={ 1 }\r\n                    onChange={handleChange}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default HeaderCard;","import React, { useState } from 'react'\r\nimport uniquid from 'uniquid'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CurrencyCard from './currency-card'\r\nimport HeaderCard from './header-card'\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: 20,\r\n    }\r\n})\r\n\r\nconst toArray = (data) => {\r\n    let info = [];\r\n    let i = 0;\r\n    for (let key in data.rates) {\r\n        info[i] = [];\r\n        info[i].push(key);\r\n        info[i].push(data.rates[key])\r\n        i++\r\n    }\r\n    return info;\r\n} \r\n\r\nconst CurrenciesList = ({ data, onSelect }) => {\r\n    const classes = useStyles();\r\n    const [rate, setRate] = useState(1);\r\n    const getCurrentRate = (currentRate) => {\r\n        if (currentRate > 0) setRate(currentRate)\r\n        else setRate(0)\r\n    }\r\n    if (!data.rates) return null;\r\n    const info = toArray(data);\r\n    return (\r\n        <>\r\n            <div className={classes.wrapper}>\r\n                <HeaderCard info={data.base} setCurrency={getCurrentRate} />\r\n            </div>\r\n            <div className={classes.wrapper} key={uniquid()}>\r\n            {info.map((el, i) => {\r\n                return i<30 ? <CurrencyCard info={el} key={uniquid()} rate={rate} onSelect={onSelect} onClick={() => console.log('click')}/> : null;\r\n            })}\r\n            </div> \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CurrenciesList","import React, { useState } from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport uniquid from 'uniquid';\r\n\r\nimport getCurrencyValue from './getCurrencyValue'\r\nimport CurrenciesList from './currencies-list'\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState({});\r\n    let currency = 'USD';\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const getData = () => {\r\n        setIsLoading(true);\r\n        getCurrencyValue(currency)\r\n            .then(resp => {\r\n                setData(resp);\r\n                setIsLoading(false);\r\n            })\r\n        }\r\n\r\n    const setCurrency = (e) => {\r\n        currency = e;\r\n        getData();\r\n    }\r\n\r\n    document.addEventListener('DOMContentLoaded', getData);\r\n    if (isLoading) return (\r\n        <div style={{display: \"flex\", justifyContent: \"center\", marginTop:\"300px\"}}>\r\n            <CircularProgress />\r\n        </div>\r\n    ) \r\n    return (\r\n        <>\r\n            <CurrenciesList key={uniquid()} data={data} onSelect={setCurrency} />    \r\n        </>\r\n    )\r\n}\r\n\r\nconst AppW = () => <App />\r\n\r\nexport default AppW","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport AppW from './components/App'\r\n\r\nReactDOM.render(<AppW />, document.getElementById('root'));"],"sourceRoot":""}